SHELL = /bin/sh

srcdir = @srcdir@
top_srcdir = @top_srcdir@
topdir = @topdir@
prefix = @prefix@
libdir = @libdir@
bindir = @bindir@
incdir = $(prefix)/include
exec_prefix = @exec_prefix@
INSTALL = @INSTALL@

top_builddir = .

SUBDIRS =  kfm kdehelp kdisplay kfontmanager kfind kpanel kvt kwm klogout kwmclient @KSCREEN@ pics 

ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
CONFIG_HEADER_IN = config.h.in
CONFIG_HEADER_FULL = config.h
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = 

default: all

.SUFFIXES:

Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status

config.status: configure
	$(SHELL) ./config.status --recheck
$(srcdir)/configure: configure.in $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)

$(CONFIG_HEADER): stamp-h
stamp-h: $(CONFIG_HEADER_IN) $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES= CONFIG_HEADERS=$(CONFIG_HEADER_FULL) \
	     $(SHELL) ./config.status
	@echo timestamp > stamp-h
$(srcdir)/$(CONFIG_HEADER_IN): stamp-h.in
$(srcdir)/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) acconfig.h config.h.bot
	echo timestamp > $(srcdir)/stamp-h.in

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.

@SET_MAKE@

clean-recursive:
	@for subdir in $(SUBDIRS); do \
	  target=`echo $@ | sed s/-recursive//`; \
	  echo "Making $$target in $$subdir"; \
	  (cd $$subdir && $(MAKE) $$target) \
	   || case "$(MFLAGS)" in *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"

clean:  clean-recursive

distclean: clean
	-rm -f config.status config.log config.cache
	-rm -f libtool stamp-h
	find . -name Makefile -exec rm -f \{\} \;

all: apps

.PHONY: default apps 

apps:
	@for subdir in $(SUBDIRS); do \
          target=`echo $@ | sed s/-recursive//`; \
          echo "Making app in $$subdir"; \
          (cd $$subdir && $(MAKE) all) \
           || case "$(MFLAGS)" in *k*) fail=yes;; *) exit 1;; esac; \
        done && test -z "$$fail"

install: 
	$(mkinstalldirs) $(incdir)
	@INSTALL_DATA@ config.h $(incdir)
	@for subdir in $(SUBDIRS); do \
	echo "Making install in $$subdir"; \
	(cd $$subdir && $(MAKE) install) \
	|| case "$(MFLAGS)" in *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
	@echo ""
	@echo ""
	@echo ""
	@echo "*************** Important *************************"
	@echo ""
	@echo " set KDEDIR to "$(prefix)
	@echo " add "$(libdir)" to your LD_LIBRARY_PATH"
	@echo " add "$(bindir)" to your PATH"
	@echo " and have fun with KDE."
	@echo ""
	@echo "Please report bugs to the buglist maintainer."
	@echo "He will forward it to the right developer."
	@echo "You can reach him under kde-bugs@kde.org"
	@echo ""
	@echo "****************************************************"
	@echo ""

uninstall:
	@for subdir in $(SUBDIRS); do \
	echo "Making uninstall in $$subdir"; \
	(cd $$subdir && $(MAKE) uninstall) \
	|| case "$(MFLAGS)" in *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
		@echo ""

