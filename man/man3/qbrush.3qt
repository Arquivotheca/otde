.TH QBrush 3qt "26 Febrary 1999" "Troll Tech AS" \" -*- nroff -*-
.\" Copyright 1992-1997 Troll Tech AS.  All rights reserved.  See the
.\" LICENSE file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QBrush \- Defines the fill pattern of shapes drawn by a QPainter
.SH SYNOPSIS
.br
.PP
\fC#include <qbrush.h>\fR
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "QBrush ()"
.br
.ti -1c
.BI "QBrush ( BrushStyle )"
.br
.ti -1c
.BI "QBrush ( const QColor &, BrushStyle=SolidPattern )"
.br
.ti -1c
.BI "QBrush ( const QColor &, const QPixmap & )"
.br
.ti -1c
.BI "QBrush ( const QBrush & )"
.br
.ti -1c
.BI "\fB~QBrush\fR ()"
.br
.ti -1c
.BI "QBrush& operator= ( const QBrush & )"
.br
.ti -1c
.BI "BrushStyle style () const"
.br
.ti -1c
.BI "void setStyle ( BrushStyle )"
.br
.ti -1c
.BI "const QColor& color () const"
.br
.ti -1c
.BI "void setColor ( const QColor & )"
.br
.ti -1c
.BI "QPixmap* pixmap () const"
.br
.ti -1c
.BI "void setPixmap ( const QPixmap & )"
.br
.ti -1c
.BI "bool operator== ( const QBrush & p ) const"
.br
.ti -1c
.BI "bool operator!= ( const QBrush & b ) const"
.br
.in -1c
.SH RELATED FUNCTION DOCUMENTATION
(Note that these are not member functions.)
.in +1c
.ti -1c
.BI "QDataStream & operator<< (QDataStream & " "s" ", const QBrush & " "b" ")"
.br
.ti -1c
.BI "QDataStream & operator>> (QDataStream & " "s" ", QBrush & " "b" ")"
.br
.in -1c
.SH DESCRIPTION
The QBrush class defines the fill pattern of shapes drawn by a QPainter.
.PP
A brush has a style and a color. One of the brush styles is a custom pattern, which is defined by a QPixmap.
.PP
The brush style defines the fill pattern. The default brush style is \fCNoBrush\fR (depends on how you construct a brush). This style tells the painter to not fill shapes. The standard style for filling is called \fCSolidPattern.\fR
.PP
The brush color defines the color of the fill pattern. The QColor documentation lists the predefined colors.
.PP
Use the QPen class for specifying line/outline styles.
.PP
Example:
.PP
.nf
.br
    QPainter painter;
.br
    QBrush   brush( yellow );           // yellow solid pattern
.br
    painter.begin( &anyPaintDevice );   // paint something
.br
    painter.setBrush( brush );          // set the yellow brush
.br
    painter.setPen( NoPen );            // do not draw outline
.br
    painter.drawRect( 40,30, 200,100 ); // draw filled rectangle
.br
    painter.setBrush( NoBrush );        // do not fill
.br
    painter.setPen( black );            // set black pen, 0 pixel width
.br
    painter.drawRect( 10,10, 30,20 );   // draw rectangle outline
.br
    painter.end();                      // painting done
.fi
.PP
See the setStyle() function for a complete list of brush styles.
.PP
See also: QPainter, QPainter::setBrush() and QPainter::setBrushOrigin().
.PP
Examples:
.(l
tictac/tictac.cpp drawdemo/drawdemo.cpp picture/picture.cpp
.)l
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QBrush::QBrush ()"
Constructs a default black brush with the style \fCNoBrush\fR (will not fill shapes).
.SH "QBrush::QBrush ( BrushStyle style )"
Constructs a black brush with the specified style.
.PP
See also: setStyle().
.SH "QBrush::QBrush ( const QColor & color, BrushStyle style=SolidPattern )"
Constructs a brush with a specified color and style.
.PP
See also: setColor() and setStyle().
.SH "QBrush::QBrush ( const QColor & color, const QPixmap & pixmap )"
Constructs a brush with a specified color and a custom pattern.
.PP
The color will only have an effect for monochrome pixmaps, i.e. QPixmap::depth() == 1.
.PP
See also: setColor() and setPixmap().
.SH "QBrush::QBrush ( const QBrush & b )"
Constructs a brush which is a shallow copy of \fIb.\fR
.SH "QBrush::~QBrush ()"
Destroys the brush.
.SH "const QColor & QBrush::color () const"
Returns the brush color.
.PP
See also: setColor().
.SH "bool QBrush::operator!= ( const QBrush & b ) const"
Returns TRUE if the brush is different from \fIb,\fR or FALSE if the brushes are equal.
.PP
Two brushes are different if they have different styles, colors or pixmaps.
.PP
See also: operator==().
.SH "QBrush & QBrush::operator= ( const QBrush & b )"
Assigns \fIb\fR to this brush and returns a reference to this brush.
.SH "bool QBrush::operator== ( const QBrush & b ) const"
Returns TRUE if the brush is equal to \fIb,\fR or FALSE if the brushes are different.
.PP
Two brushes are equal if they have equal styles, colors and pixmaps.
.PP
See also: operator!=().
.SH "QPixmap * QBrush::pixmap () const"
Returns a pointer to the custom brush pattern.
.PP
A null pointer is returned if no custom brush pattern has been set.
.PP
See also: setPixmap().
.SH "void QBrush::setColor ( const QColor & c )"
Sets the brush color to \fIc.\fR
.PP
See also: color() and setStyle().
.PP
Examples:
.(l
picture/picture.cpp
.)l
.SH "void QBrush::setPixmap ( const QPixmap & pixmap )"
Sets the brush pixmap. The style is set to \fCCustomPattern.\fR
.PP
The curren brush color will only have an effect for monochrome pixmaps, i.e. QPixmap::depth() == 1.
.PP
See also: pixmap() and color().
.SH "void QBrush::setStyle ( BrushStyle s )"
Sets the brush style to \fIs.\fR
.PP
The brush styles are:
.TP
\fCNoBrush\fR will not fill shapes (default).
.TP
\fCSolidPattern\fR solid (100%) fill pattern.
.TP
\fCDense1Pattern\fR 94% fill pattern.
.TP
\fCDense2Pattern\fR 88% fill pattern.
.TP
\fCDense3Pattern\fR 63% fill pattern.
.TP
\fCDense4Pattern\fR 50% fill pattern.
.TP
\fCDense5Pattern\fR 37% fill pattern.
.TP
\fCDense6Pattern\fR 12% fill pattern.
.TP
\fCDense7Pattern\fR 6% fill pattern.
.TP
\fCHorPattern\fR horizontal lines pattern.
.TP
\fCVerPattern\fR vertical lines pattern.
.TP
\fCCrossPattern\fR crossing lines pattern.
.TP
\fCBDiagPattern\fR diagonal lines (directed / ) pattern.
.TP
\fCFDiagPattern\fR diagonal lines (directed \\ ) pattern.
.TP
\fCDiagCrossPattern\fR diagonal crossing lines pattern.
.TP
\fCCustomPattern\fR set when a pixmap pattern is being used.
.PP
See also: style().
.SH "BrushStyle QBrush::style () const"
Returns the brush style.
.PP
See also: setStyle().
.SH RELATED FUNCTION DOCUMENTATION
.SH "QDataStream & operator<< (QDataStream & s, const QBrush & b)"
Writes a brush to the stream and returns a reference to the stream.
.PP
The serialization format is:
.IP 1
The brush style (UINT8)
.IP 2
The brush color (QColor)
.IP 3
If style == \fCCustomPattern:\fR the brush pixmap (QPixmap)
.SH "QDataStream & operator>> (QDataStream & s, QBrush & b)"
Reads a brush from the stream and returns a reference to the stream.
.SH "SEE ALSO"
.BR http://www.troll.no/qt/qbrush.html
.SH COPYRIGHT
Copyright 1992-1997 Troll Tech AS.  See the LICENSE file included in
the distribution for a complete license statement.
.SH AUTHOR
Generated automatically from the source code.
