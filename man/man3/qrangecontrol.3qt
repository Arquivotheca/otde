.TH QRangeControl 3qt "26 Febrary 1999" "Troll Tech AS" \" -*- nroff -*-
.\" Copyright 1992-1997 Troll Tech AS.  All rights reserved.  See the
.\" LICENSE file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QRangeControl \- Integer value within a range
.SH SYNOPSIS
.br
.PP
\fC#include <qrangecontrol.h>\fR
.PP
Inherited by QScrollBar, QSlider and QSpinBox.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "QRangeControl ()"
.br
.ti -1c
.BI "QRangeControl ( int " "minValue" ", int " "maxValue" ", int " "lineStep" ", int " "pageStep" ", int value )"
.br
.ti -1c
.BI "int value () const"
.br
.ti -1c
.BI "void setValue ( int )"
.br
.ti -1c
.BI "void addPage ()"
.br
.ti -1c
.BI "void subtractPage ()"
.br
.ti -1c
.BI "void addLine ()"
.br
.ti -1c
.BI "void subtractLine ()"
.br
.ti -1c
.BI "int minValue () const"
.br
.ti -1c
.BI "int maxValue () const"
.br
.ti -1c
.BI "void setRange ( int " "minValue" ", int maxValue )"
.br
.ti -1c
.BI "int lineStep () const"
.br
.ti -1c
.BI "int pageStep () const"
.br
.ti -1c
.BI "void setSteps ( int " "line" ", int page )"
.br
.in -1c
.SS "Protected Members"
.in +1c
.ti -1c
.BI "void directSetValue ( int val )"
.br
.ti -1c
.BI "int prevValue () const"
.br
.ti -1c
.BI "virtual void valueChange ()"
.br
.ti -1c
.BI "virtual void rangeChange ()"
.br
.ti -1c
.BI "virtual void stepChange ()"
.br
.in -1c
.SH DESCRIPTION
The QRangeControl class provides an integer value within a range.
.PP
This class has many functions to manipulate a value inside a range. It was specifically designed for the QScrollBar widget, but it can also be practical for other purposes.
.PP
The three virtual functions valueChange(), rangeChange() and stepChange() can be reimplemented in a subclass to detect range control changes.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QRangeControl::QRangeControl ()"
Constructs a range control with min value 0, max value 99, line step 1, page step 10 and initial value 0.
.SH "QRangeControl::QRangeControl ( int minValue, int maxValue, int lineStep, int pageStep, int value )"
Constructs a range control with the specified parameters.
.SH "void QRangeControl::addLine ()"
Equivalent to
.PP
.nf
.br
 setValue( value()+lineStep() )
.fi
.
.PP
See also: subtractLine().
.SH "void QRangeControl::addPage ()"
Equivalent to
.PP
.nf
.br
 setValue( value()+pageStep() )
.fi
.PP
See also: subtractPage().
.SH "void QRangeControl::directSetValue ( int value ) \fC[protected]\fR"
Sets the range control value directly without calling valueChange().
.PP
Adjusts the value if it is less than the min value or greater than the max value.
.PP
See also: setValue().
.SH "int QRangeControl::lineStep () const"
Returns the current line step.
.PP
See also: setSteps() and pageStep().
.SH "int QRangeControl::maxValue () const"
Returns the current maximum value in the range.
.PP
See also: setRange() and minValue().
.SH "int QRangeControl::minValue () const"
Returns the current minimum value in the range.
.PP
See also: setRange() and maxValue().
.SH "int QRangeControl::pageStep () const"
Returns the current page step.
.PP
See also: setSteps() and lineStep().
.SH "int QRangeControl::prevValue () const \fC[protected]\fR"
Returns the previous range control value.
.PP
See also: value().
.SH "void QRangeControl::rangeChange () \fC[virtual protected]\fR"
This virtual function is called whenever the range control range changes. You can reimplment it if you want to be notified when the range changes. The default implementation does nothing.
.PP
See also: setRange(), valueChange() and stepChange().
.PP
Reimplemented in QSlider and QScrollBar.
.SH "void QRangeControl::setRange ( int minValue, int maxValue )"
Sets the range min value to \fIminValue\fR and the max value to \fImaxValue.\fR
.PP
Calls the virtual rangeChange() function if the new min and max values are different from the previous setting. Calls the virtual valueChange() function if the current value is outside the new range and has to be adjusted.
.PP
See also: minValue() and maxValue().
.PP
Examples:
.(l
xform/xform.cpp
.)l
.SH "void QRangeControl::setSteps ( int lineStep,int pageStep )"
Sets the range line step to \fIlineStep\fR and page step to \fIpageStep.\fR
.PP
Calls the virtual stepChange() function if the new line step and/or page step are different from the previous setting.
.PP
See also: setRange().
.SH "void QRangeControl::setValue ( int value )"
Sets the range control value to \fIvalue.\fR
.PP
Adjusts the value if it is less than the min value or greater than the max value.
.PP
Calls the virtual valueChange() function if the value is different from the previous value.
.SH "void QRangeControl::stepChange () \fC[virtual protected]\fR"
This virtual function is called whenever the range control step value changes. You can reimplment it if you want to be notified when the step changes. The default implementation does nothing.
.PP
See also: setSteps(), rangeChange() and valueChange().
.PP
Reimplemented in QScrollBar.
.SH "void QRangeControl::subtractLine ()"
Equivalent to
.PP
.nf
.br
 setValue( value()-lineStep() )
.fi
.
.PP
See also: addLine().
.SH "void QRangeControl::subtractPage ()"
Equivalent to
.PP
.nf
.br
 setValue( value()-pageStep() )
.fi
.PP
See also: addPage().
.SH "int QRangeControl::value () const"
Returns the current range control value.
.PP
See also: setValue() and prevValue().
.PP
Examples:
.(l
xform/xform.cpp
.)l
.SH "void QRangeControl::valueChange () \fC[virtual protected]\fR"
This virtual function is called whenever the range control value changes. You can reimplment it if you want to be notified when the value changes. The default implementation does nothing.
.PP
See also: setValue(), addPage(), subtractPage(), addLine(), subtractLine(), rangeChange() and stepChange().
.PP
Reimplemented in QSlider and QScrollBar.
.SH "SEE ALSO"
.BR http://www.troll.no/qt/qrangecontrol.html
.SH COPYRIGHT
Copyright 1992-1997 Troll Tech AS.  See the LICENSE file included in
the distribution for a complete license statement.
.SH AUTHOR
Generated automatically from the source code.
