.TH QXtWidget 3qt "26 Febrary 1999" "Troll Tech AS" \" -*- nroff -*-
.\" Copyright 1992-1997 Troll Tech AS.  All rights reserved.  See the
.\" LICENSE file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QXtWidget \- Allows mixing of Xt/Motif and Qt widgets [Qt Xt/Motif Extension]
.SH SYNOPSIS
.br
.PP
\fC#include <qxt.h>\fR
.PP
Inherits QWidget.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "QXtWidget ( const char * " "name" ", Widget " "parent" ", bool " "managed" "=FALSE )"
.br
.ti -1c
.BI "QXtWidget ( const char * " "name" ", WidgetClass " "widget_class" ", QXtWidget * " "parent" ", ArgList " "args" "=0, Cardinal " "num_args" "=0, bool " "managed" "=FALSE )"
.br
.ti -1c
.BI "\fB~QXtWidget\fR ()"
.br
.ti -1c
.BI "Widget xtWidget () const"
.br
.ti -1c
.BI "virtual void setGeometry ( int " "x" ", int " "y" ", int " "w" ", int h )"
.br
.ti -1c
.BI "void setGeometry ( const QRect & )"
.br
.in -1c
.SS "Protected Members"
.in +1c
.ti -1c
.BI "bool x11Event ( XEvent * )"
.br
.ti -1c
.BI "virtual void leaveEvent ( QEvent * )"
.br
.in -1c
.SH DESCRIPTION
This class is defined in the \fBQt Xt/Motif Extension\fR, which can be found in the \fCqt/extensions\fR directory. It is not included in the main Qt API.
.PP
Allows mixing of Xt/Motif and Qt widgets.
.PP
QXtWidget acts as a bridge between Xt and Qt. For utilizing old Xt widgets, it can be a QWidget based on a Xt widget class. For including Qt widgets in an existing Xt/Motif application, it can be a special Xt widget class that is a QWidget. See the constructors for the different behaviors.
.PP
Examples:
.(l
mainlyMotif/editor.cpp mainlyQt/editor.cpp mainlyXt/editor.cpp
.)l
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QXtWidget::QXtWidget ( const char * name, Widget parent, bool managed=FALSE )"
Constructs a QXtWidget of the special Xt widget class known as "QWidget" to the resource manager.
.PP
Use this constructor to utilize Qt widgets in an Xt/Motif application. The QXtWidget is a QWidget, so you can create subwidgets, layouts, etc. using Qt functionality.
.SH "QXtWidget::QXtWidget ( const char * name, WidgetClass widget_class, QXtWidget * parent, ArgList args=0, Cardinal num_args=0, bool managed=FALSE )"
Constructs a QXtWidget of the given \fIwidget_class.\fR
.PP
Use this constructor to utilize Xt or Motif widgets in a Qt application. The QXtWidget looks and behaves like the Xt class, but can be used like any QWidget.
.PP
Note that the parent must be a QXtWidget (possibly NULL). This is necessary since all Xt widgets must have Xt widgets as ancestors up to the top-level widget. \fIWWA: This restriction may be avoidable by reimplementing the low-level Qt window creation/destruction functions.\fR
.SH "QXtWidget::~QXtWidget ()"
Destructs the QXtWidget.
.SH "void QXtWidget::leaveEvent ( QEvent * ev ) \fC[virtual protected]\fR"
Reimplemented to produce the Xt effect of losing focus when the mouse goes out of the widget. \fIThis may be changed.\fR
.PP
Reimplemented from QWidget.
.SH "void QXtWidget::setGeometry ( const QRect & r )"
Reimplemented to pass the new geometry to Xt via XtSetValues().
.SH "void QXtWidget::setGeometry ( int x, int y, int w, int h ) \fC[virtual]\fR"
Reimplemented to pass the new geometry to Xt via XtSetValues().
.PP
Examples:
.(l
mainlyQt/editor.cpp
.)l
.PP
Reimplemented from QWidget.
.SH "bool QXtWidget::x11Event ( XEvent * ev ) \fC[protected]\fR"
Reimplemented to pass events to Xt.
.SH "Widget QXtWidget::xtWidget () const"
Returns the Xt widget equivalent for the Qt widget.
.PP
Examples:
.(l
mainlyMotif/editor.cpp mainlyXt/editor.cpp
.)l
.SH "SEE ALSO"
.BR http://www.troll.no/qt/qxtwidget.html
.SH COPYRIGHT
Copyright 1992-1997 Troll Tech AS.  See the LICENSE file included in
the distribution for a complete license statement.
.SH AUTHOR
Generated automatically from the source code.
