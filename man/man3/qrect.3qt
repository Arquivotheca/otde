.TH QRect 3qt "26 Febrary 1999" "Troll Tech AS" \" -*- nroff -*-
.\" Copyright 1992-1997 Troll Tech AS.  All rights reserved.  See the
.\" LICENSE file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QRect \- Defines a rectangle in the plane
.SH SYNOPSIS
.br
.PP
\fC#include <qrect.h>\fR
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "QRect ()"
.br
.ti -1c
.BI "QRect ( const QPoint & " "topleft" ", const QPoint & bottomright )"
.br
.ti -1c
.BI "QRect ( const QPoint & " "topleft" ", const QSize & size )"
.br
.ti -1c
.BI "QRect ( int " "left" ", int " "top" ", int " "width" ", int height )"
.br
.ti -1c
.BI "bool isNull () const"
.br
.ti -1c
.BI "bool isEmpty () const"
.br
.ti -1c
.BI "bool isValid () const"
.br
.ti -1c
.BI "QRect normalize () const"
.br
.ti -1c
.BI "int left () const"
.br
.ti -1c
.BI "int top () const"
.br
.ti -1c
.BI "int right () const"
.br
.ti -1c
.BI "int bottom () const"
.br
.ti -1c
.BI "int \fBx\fR () const"
.br
.ti -1c
.BI "int \fBy\fR () const"
.br
.ti -1c
.BI "void setLeft ( int pos )"
.br
.ti -1c
.BI "void setTop ( int pos )"
.br
.ti -1c
.BI "void setRight ( int pos )"
.br
.ti -1c
.BI "void setBottom ( int pos )"
.br
.ti -1c
.BI "void setX ( int x )"
.br
.ti -1c
.BI "void setY ( int y )"
.br
.ti -1c
.BI "QPoint topLeft () const"
.br
.ti -1c
.BI "QPoint bottomRight () const"
.br
.ti -1c
.BI "QPoint topRight () const"
.br
.ti -1c
.BI "QPoint bottomLeft () const"
.br
.ti -1c
.BI "QPoint center () const"
.br
.ti -1c
.BI "void rect ( int * " "x" ", int * " "y" ", int * " "w" ", int * h ) const"
.br
.ti -1c
.BI "void coords ( int * " "x1" ", int * " "y1" ", int * " "x2" ", int * y2 ) const"
.br
.ti -1c
.BI "void moveTopLeft ( const QPoint & p )"
.br
.ti -1c
.BI "void moveBottomRight ( const QPoint & p )"
.br
.ti -1c
.BI "void moveTopRight ( const QPoint & p )"
.br
.ti -1c
.BI "void moveBottomLeft ( const QPoint & p )"
.br
.ti -1c
.BI "void moveCenter ( const QPoint & p )"
.br
.ti -1c
.BI "void moveBy ( int " "dx" ", int dy )"
.br
.ti -1c
.BI "void setRect ( int " "x" ", int " "y" ", int " "w" ", int h )"
.br
.ti -1c
.BI "void setCoords ( int " "x1" ", int " "y1" ", int " "x2" ", int y2 )"
.br
.ti -1c
.BI "QSize size () const"
.br
.ti -1c
.BI "int width () const"
.br
.ti -1c
.BI "int height () const"
.br
.ti -1c
.BI "void setWidth ( int w )"
.br
.ti -1c
.BI "void setHeight ( int h )"
.br
.ti -1c
.BI "void setSize ( const QSize & s )"
.br
.ti -1c
.BI "bool contains ( const QPoint & " "p" ", bool " "proper" "=FALSE ) const"
.br
.ti -1c
.BI "bool contains ( const QRect & " "r" ", bool " "proper" "=FALSE ) const"
.br
.ti -1c
.BI "QRect unite ( const QRect & r ) const"
.br
.ti -1c
.BI "QRect intersect ( const QRect & r ) const"
.br
.ti -1c
.BI "bool intersects ( const QRect & r ) const"
.br
.in -1c
.SH RELATED FUNCTION DOCUMENTATION
(Note that these are not member functions.)
.in +1c
.ti -1c
.BI "bool operator== (const QRect & " "r1" ", const QRect & " "r2" ")"
.br
.ti -1c
.BI "bool operator!= (const QRect & " "r1" ", const QRect & " "r2" ")"
.br
.ti -1c
.BI "QDataStream & operator<< (QDataStream & " "s" ", const QRect & " "r" ")"
.br
.ti -1c
.BI "QDataStream & operator>> (QDataStream & " "s" ", QRect & " "r" ")"
.br
.in -1c
.SH DESCRIPTION
The QRect class defines a rectangle in the plane.
.PP
A rectangle is internally represented as an upper left corner and a bottom right corner, but it is normally expressed as an upper left corner and a size.
.PP
The coordinate type is QCOORD (defined in qwindowdefs.h as \fCshort).\fR The minimum value of QCOORD is QCOORD_MIN (-32768) and the maximum value is QCOORD_MAX (32767).
.PP
Note that the size (width and height) of a rectange might be different from what you are used to. If the top left corner and the bottom right corner are the same, then the height and the width of the rectangle will both be 1.
.PP
Generally, \fIwidth = right - left + 1\fR and \fIheight = bottom - top + 1.\fR We designed it this way to make it correspond to rectangular spaces used by drawing functions, where the width and height denote a number of pixels. For example, drawing a rectangle with width and height 1 draws a single pixel.
.PP
The default coordinate system has origin (0,0) in the top left corner, the positive direction of the y axis is downwards and the positive x axis is from the left to the right.
.PP
See also: QPoint and QSize.
.PP
Examples:
.(l
tictac/tictac.cpp forever/forever.cpp desktop/desktop.cpp tooltip/tooltip.cpp movies/main.cpp xform/xform.cpp
.)l
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QRect::QRect ()"
Constructs an empty rectangle.
.SH "QRect::QRect ( const QPoint & topLeft, const QPoint & bottomRight )"
Constructs a rectangle with \fItopLeft\fR as the top left corner and \fIbottomRight\fR as the bottom right corner.
.SH "QRect::QRect ( const QPoint & topLeft, const QSize & size )"
Constructs a rectangle with \fItopLeft\fR as the top left corner and \fIsize\fR as the rectangle size.
.SH "QRect::QRect ( int left, int top, int width, int height )"
Constructs a rectangle with the \fItop, left\fR corner and \fIwidth\fR and \fIheight.\fR
.PP
Example (creates three identical rectangles):
.PP
.nf
.br
    QRect r1( QPoint(100,200), QPoint(110,215) );
.br
    QRect r2( QPoint(100,200), QSize(11,16) );
.br
    QRect r3( 100, 200, 11, 16 );
.fi
.SH "int QRect::bottom () const"
Returns the bottom coordinate of the rectangle.
.PP
See also: top(), setBottom(), bottomLeft() and bottomRight().
.PP
Examples:
.(l
desktop/desktop.cpp
.)l
.SH "QPoint QRect::bottomLeft () const"
Returns the bottom left position of the rectangle.
.PP
See also: moveBottomLeft(), bottomRight(), topLeft(), topRight(), bottom() and left().
.PP
Examples:
.(l
tictac/tictac.cpp
.)l
.SH "QPoint QRect::bottomRight () const"
Returns the bottom right position of the rectangle.
.PP
See also: moveBottomRight(), bottomLeft(), topLeft(), topRight(), bottom() and right().
.PP
Examples:
.(l
tictac/tictac.cpp
.)l
.SH "QPoint QRect::center () const"
Returns the center point of the rectangle.
.PP
See also: moveCenter(), topLeft(), topRight(), bottomLeft() and bottomRight().
.PP
Examples:
.(l
tooltip/tooltip.cpp
.)l
.SH "bool QRect::contains ( const QPoint & p, bool proper=FALSE ) const"
Returns TRUE if the point \fIp\fR is inside or on the edge of the rectangle.
.PP
If \fIproper\fR is TRUE, this function returns TRUE only if \fIp\fR is inside (not on the edge).
.SH "bool QRect::contains ( const QRect & r, bool proper=FALSE ) const"
Returns TRUE if the rectangle \fIr\fR is inside this rectangle.
.PP
If \fIproper\fR is TRUE, this function returns TRUE only if \fIr\fR is entirely inside (not on the edge).
.PP
See also: unite(), intersect() and intersects().
.SH "void QRect::coords ( int * xp1, int * yp1, int * xp2, int * yp2 ) const"
Extracts the rectangle parameters as the top left point and the bottom right point.
.PP
See also: setCoords() and rect().
.SH "int QRect::height () const"
Returns the height of the rectangle. The height includes both the top and bottom edges, ie. height = bottom - top + 1.
.PP
See also: width(), size() and setHeight().
.PP
Examples:
.(l
tictac/tictac.cpp desktop/desktop.cpp movies/main.cpp xform/xform.cpp
.)l
.SH "QRect QRect::intersect ( const QRect & r ) const"
Returns the intersection rectangle of this rectangle and \fIr.\fR
.PP
Returns an empty rectangle if there is no intersection.
.PP
See also: isEmpty(), intersects(), unite() and contains().
.SH "bool QRect::intersects ( const QRect & r ) const"
Returns TRUE if this rectangle intersects with \fIr\fR (there is at least one pixel which is within both rectangles).
.PP
See also: intersect() and contains().
.SH "bool QRect::isEmpty () const"
Returns TRUE if the rectangle is empty, otherwise FALSE.
.PP
An empty rectangle has a left() > right() or top() > bottom().
.PP
An empty rectangle is not valid.
.PP
.nf
.br
 isEmpty() == !isValid()
.fi
.PP
See also: isNull() and isValid().
.SH "bool QRect::isNull () const"
Returns TRUE if the rectangle is a null rectangle, otherwise FALSE.
.PP
A null rectangle has both the width and the height set to 0, that is right() == left() - 1 and bottom() == top() - 1.
.PP
Remember that if right() == left() and bottom() == top(), then the rectangle has width 1 and height 1.
.PP
A null rectangle is also empty.
.PP
A null rectangle is not valid.
.PP
See also: isEmpty() and isValid().
.SH "bool QRect::isValid () const"
Returns TRUE if the rectangle is valid, or FALSE if it is invalid (empty).
.PP
A valid rectangle has a left() <= right() and top() <= bottom().
.PP
.nf
.br
 isValid() == !isEmpty()
.fi
.PP
See also: isNull(), isEmpty() and normalize().
.PP
Examples:
.(l
tooltip/tooltip.cpp
.)l
.SH "int QRect::left () const"
Returns the left coordinate of the rectangle. Identical to x().
.PP
See also: x(), top(), right(), setLeft(), topLeft() and bottomLeft().
.PP
Examples:
.(l
tictac/tictac.cpp desktop/desktop.cpp xform/xform.cpp
.)l
.SH "void QRect::moveBottomLeft ( const QPoint & p )"
Sets the bottom left position of the rectangle to \fIp,\fR leaving the size unchanged.
.PP
See also: bottomLeft(), moveBottomRight(), moveTopLeft(), moveTopRight(), setBottom() and setLeft().
.SH "void QRect::moveBottomRight ( const QPoint & p )"
Sets the bottom right position of the rectangle to \fIp,\fR leaving the size unchanged.
.PP
See also: bottomRight(), moveBottomLeft(), moveTopLeft(), moveTopRight(), setBottom() and setRight().
.SH "void QRect::moveBy ( int dx, int dy )"
Moves the rectangle \fIdx\fR along the X axis and \fIdy\fR along the Y axis, relative to the current position. (Positive values moves the rectangle rightwards and/or downwards.).
.PP
Examples:
.(l
xform/xform.cpp
.)l
.SH "void QRect::moveCenter ( const QPoint & p )"
Sets the center point of the rectangle to \fIp,\fR leaving the size unchanged.
.PP
See also: center(), moveTopLeft(), moveTopRight(), moveBottomLeft() and moveBottomRight().
.PP
Examples:
.(l
tictac/tictac.cpp
.)l
.SH "void QRect::moveTopLeft ( const QPoint & p )"
Sets the top left position of the rectangle to \fIp,\fR leaving the size unchanged.
.PP
See also: topLeft(), moveTopRight(), moveBottomLeft(), moveBottomRight(), setTop() and setLeft().
.PP
Examples:
.(l
xform/xform.cpp
.)l
.SH "void QRect::moveTopRight ( const QPoint & p )"
Sets the top right position of the rectangle to \fIp,\fR leaving the size unchanged.
.PP
See also: topRight(), moveTopLeft(), moveBottomLeft(), moveBottomRight(), setTop() and setRight().
.SH "QRect QRect::normalize () const"
Returns a normalized rectangle, i.e. one that has a non-negative width and height.
.PP
It swaps left and right if left() > right(), and swaps top and bottom if top() > bottom().
.PP
See also: isValid().
.SH "void QRect::rect ( int * x, int * y, int * w, int * h ) const"
Extracts the rectangle parameters as the position and the size.
.PP
See also: setRect() and coords().
.SH "int QRect::right () const"
Returns the right coordinate of the rectangle.
.PP
See also: left(), setRight(), topRight() and bottomRight().
.PP
Examples:
.(l
desktop/desktop.cpp
.)l
.SH "void QRect::setBottom ( int pos )"
Sets the bottom edge of the rectangle. May change the height, but will never change the top edge of the rectangle.
.PP
See also: bottom(), setTop() and setHeight().
.SH "void QRect::setCoords ( int xp1, int yp1, int xp2, int yp2 )"
Sets the coordinates of the rectangle's top left corner to \fI(xp1,yp1),\fR and the coordinates of its bottom right corner to \fI(xp2,yp2).\fR
.PP
See also: coords() and setRect().
.SH "void QRect::setHeight ( int h )"
Sets the height of the rectangle to \fIh.\fR The top edge is not moved, but the bottom edge may be moved.
.PP
See also: height(), setTop(), setBottom() and setSize().
.PP
Examples:
.(l
desktop/desktop.cpp
.)l
.SH "void QRect::setLeft ( int pos )"
Sets the left edge of the rectangle. May change the width, but will never change the right edge of the rectangle.
.PP
Identical to setX().
.PP
See also: left(), setTop() and setWidth().
.SH "void QRect::setRect ( int x, int y, int w, int h )"
Sets the coordinates of the rectangle's top left corner to \fI(x,y),\fR and its size to (w,h).
.PP
See also: rect() and setCoords().
.SH "void QRect::setRight ( int pos )"
Sets the right edge of the rectangle. May change the width, but will never change the left edge of the rectangle.
.PP
See also: right(), setLeft() and setWidth().
.SH "void QRect::setSize ( const QSize & s )"
Sets the size of the rectangle to \fIs.\fR The top left corner is not moved.
.PP
See also: size(), setWidth() and setHeight().
.PP
Examples:
.(l
xform/xform.cpp
.)l
.SH "void QRect::setTop ( int pos )"
Sets the top edge of the rectangle. May change the height, but will never change the bottom edge of the rectangle.
.PP
Identical to setY().
.PP
See also: top(), setBottom() and setHeight().
.SH "void QRect::setWidth ( int w )"
Sets the width of the rectangle to \fIw.\fR The right edge is changed, but not the left edge.
.PP
See also: width(), setLeft(), setRight() and setSize().
.PP
Examples:
.(l
desktop/desktop.cpp
.)l
.SH "void QRect::setX ( int x )"
Sets the x position of the rectangle (its left end). May change the width, but will never change the right edge of the rectangle.
.PP
Identical to setLeft().
.PP
See also: x() and setY().
.SH "void QRect::setY ( int y )"
Sets the y position of the rectangle (its top). May change the height, but will never change the bottom edge of the rectangle.
.PP
Identical to setTop().
.PP
See also: y() and setX().
.SH "QSize QRect::size () const"
Returns the size of the rectangle.
.PP
See also: width() and height().
.PP
Examples:
.(l
desktop/desktop.cpp movies/main.cpp
.)l
.SH "int QRect::top () const"
Returns the top coordinate of the rectangle. Identical to y().
.PP
See also: y(), left(), bottom(), setTop(), topLeft() and topRight().
.PP
Examples:
.(l
tictac/tictac.cpp desktop/desktop.cpp xform/xform.cpp
.)l
.SH "QPoint QRect::topLeft () const"
Returns the top left position of the rectangle.
.PP
See also: moveTopLeft(), topRight(), bottomLeft(), bottomRight(), left() and top().
.PP
Examples:
.(l
tictac/tictac.cpp
.)l
.SH "QPoint QRect::topRight () const"
Returns the top right position of the rectangle.
.PP
See also: moveTopRight(), topLeft(), bottomLeft(), bottomRight(), top() and right().
.PP
Examples:
.(l
tictac/tictac.cpp
.)l
.SH "QRect QRect::unite ( const QRect & r ) const"
Returns the union rectangle of this rectangle and \fIr.\fR The union rectangle of a nonempty rectangle and an empty or invalid rectangle is defined to be the nonempty rectangle.
.PP
See also: intersect(), intersects() and contains().
.PP
Examples:
.(l
xform/xform.cpp
.)l
.SH "int QRect::width () const"
Returns the width of the rectangle. The width includes both the left and right edges, ie. width = right - left + 1.
.PP
See also: height(), size() and setHeight().
.PP
Examples:
.(l
tictac/tictac.cpp desktop/desktop.cpp movies/main.cpp xform/xform.cpp
.)l
.SH "int QRect::x () const"
Returns the left coordinate of the rectangle. Identical to left().
.PP
See also: left(), y() and setX().
.PP
Examples:
.(l
desktop/desktop.cpp movies/main.cpp xform/xform.cpp
.)l
.SH "int QRect::y () const"
Returns the top coordinate of the rectangle. Identical to top().
.PP
See also: top(), x() and setY().
.PP
Examples:
.(l
desktop/desktop.cpp movies/main.cpp xform/xform.cpp
.)l
.SH RELATED FUNCTION DOCUMENTATION
.SH "bool operator== (const QRect & r1, const QRect & r2)"
Returns TRUE if \fIr1\fR and \fIr2\fR are equal, or FALSE if they are different.
.SH "bool operator!= (const QRect & r1, const QRect & r2)"
Returns TRUE if \fIr1\fR and \fIr2\fR are different, or FALSE if they are equal.
.SH "QDataStream & operator<< (QDataStream & s, const QRect & r)"
Writes a QRect to the stream and returns a reference to the stream.
.PP
Serialization format: [left (INT16), top (INT16), right (INT16), bottom (INT16)].
.SH "QDataStream & operator>> (QDataStream & s, QRect & r)"
Reads a QRect from the stream and returns a reference to the stream.
.SH "SEE ALSO"
.BR http://www.troll.no/qt/qrect.html
.SH COPYRIGHT
Copyright 1992-1997 Troll Tech AS.  See the LICENSE file included in
the distribution for a complete license statement.
.SH AUTHOR
Generated automatically from the source code.
