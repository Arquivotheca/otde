.TH QPrinter 3qt "26 Febrary 1999" "Troll Tech AS" \" -*- nroff -*-
.\" Copyright 1992-1997 Troll Tech AS.  All rights reserved.  See the
.\" LICENSE file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QPrinter \- Paint device that prints graphics on a printer
.SH SYNOPSIS
.br
.PP
\fC#include <qprinter.h>\fR
.PP
Inherits QPaintDevice.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "QPrinter ()"
.br
.ti -1c
.BI "\fB~QPrinter\fR ()"
.br
.ti -1c
.BI "const char* printerName () const"
.br
.ti -1c
.BI "void setPrinterName ( const char * )"
.br
.ti -1c
.BI "bool outputToFile () const"
.br
.ti -1c
.BI "void setOutputToFile ( bool )"
.br
.ti -1c
.BI "const char* outputFileName () const"
.br
.ti -1c
.BI "void setOutputFileName ( const char * )"
.br
.ti -1c
.BI "const char* printProgram () const"
.br
.ti -1c
.BI "void setPrintProgram ( const char * )"
.br
.ti -1c
.BI "const char* docName () const"
.br
.ti -1c
.BI "void setDocName ( const char * )"
.br
.ti -1c
.BI "const char* creator () const"
.br
.ti -1c
.BI "void setCreator ( const char * )"
.br
.ti -1c
.BI "Orientation orientation () const"
.br
.ti -1c
.BI "void setOrientation ( Orientation )"
.br
.ti -1c
.BI "PageSize pageSize () const"
.br
.ti -1c
.BI "void setPageSize ( PageSize )"
.br
.ti -1c
.BI "void setPageOrder ( PageOrder )"
.br
.ti -1c
.BI "PageOrder pageOrder () const"
.br
.ti -1c
.BI "void setColorMode ( ColorMode )"
.br
.ti -1c
.BI "ColorMode colorMode () const"
.br
.ti -1c
.BI "int fromPage () const"
.br
.ti -1c
.BI "int toPage () const"
.br
.ti -1c
.BI "void setFromTo ( int " "fromPage" ", int toPage )"
.br
.ti -1c
.BI "int minPage () const"
.br
.ti -1c
.BI "int maxPage () const"
.br
.ti -1c
.BI "void setMinMax ( int " "minPage" ", int maxPage )"
.br
.ti -1c
.BI "int numCopies () const"
.br
.ti -1c
.BI "void setNumCopies ( int )"
.br
.ti -1c
.BI "bool newPage ()"
.br
.ti -1c
.BI "bool abort ()"
.br
.ti -1c
.BI "bool aborted () const"
.br
.ti -1c
.BI "bool setup ( QWidget * " "parent" " = 0 )"
.br
.in -1c
.SS "Protected Members"
.in +1c
.ti -1c
.BI "virtual bool cmd ( int, QPainter *, QPDevCmdParam * )"
.br
.ti -1c
.BI "virtual int metric ( int ) const"
.br
.in -1c
.SH DESCRIPTION
The QPrinter class is a paint device that prints graphics on a printer.
.PP
All window systems that Qt supports, except X11, have built-in printer drivers. For X11, Qt provides PostScript (tm) printing.
.PP
Drawing graphics on a printer is almost identical to drawing graphics in a widget or a pixmap. The only difference is that the programmer must think about dividing the document into pages and handling abort commands.
.PP
The default coordinate system of a printer is a 72 dpi (dots per inch) system with (0,0) at the upper left corner, with increasing values to the right and downwards. This causes printer output to be roughly the same size as screen output on most screens. You can easily change the coordinate system using QPainter::setViewport(). QPainter::setWindow() and/or QPainter::setWorldMatrix().
.PP
The newPage() function should be called to finish the current page and start printing a new page.
.PP
If the user decides to abort printing, aborted() will return TRUE. The QPrinter class handles abortion automatically, but the programmer should from time to time check the aborted() flag and stop painting if the print job has been aborted.
.PP
Example (a complete application):
.PP
.nf
.br
    #include <qapplication.h>
.br
    #include <qpainter.h>
.br
    #include <qprinter.h>
.br
    #include <qprintdialog.h>
.br
.br
    int main( int argc, char **argv )
.br
    {
.br
        QApplication a( argc, argv );
.br
.br
        QPrinter prt;
.br
        if ( prt.setup() ) {
.br
            QPainter p;
.br
            p.begin( &prt );
.br
            p.rotate( 55 );
.br
            p.setFont( QFont("times", 144, QFont::Bold) );
.br
            p.drawText( 80,30, "Hello, world!" );
.br
            p.end();
.br
        }
.br
        return 0;
.br
    }
.fi
.PP
Examples:
.(l
drawdemo/drawdemo.cpp application/application.cpp
.)l
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QPrinter::QPrinter ()"
Constructs a printer paint device.
.SH "QPrinter::~QPrinter ()"
Destroys the printer paint device and cleans up.
.SH "bool QPrinter::abort ()"
Aborts the print job. Returns TRUE if successful, otherwise FALSE.
.PP
See also: aborted().
.SH "bool QPrinter::aborted () const"
Returns TRUE is the printer job was aborted, otherwise FALSE.
.PP
See also: abort().
.SH "bool QPrinter::cmd ( int c, QPainter * paint, QPDevCmdParam * p ) \fC[virtual protected]\fR"
For internal use only.
.PP
Reimplemented from QPaintDevice.
.SH "QPrinter::ColorMode QPrinter::colorMode() const"
Returns the current color mode. The default color more is \fCColor.\fR
.PP
See also: setColorMode().
.SH "const char * QPrinter::creator () const"
Returns the creator name.
.PP
See also: setCreator().
.SH "const char * QPrinter::docName () const"
Returns the document name.
.PP
See also: setDocName().
.SH "int QPrinter::fromPage () const"
Returns the from-page setting. The default value is 0.
.PP
The programmer is responsible for reading this setting and print accordingly.
.PP
See also: setFromTo() and toPage().
.SH "int QPrinter::maxPage () const"
Returns the max-page setting. The default value is 0.
.PP
See also: minPage() and setMinMax().
.SH "int QPrinter::metric ( int m ) const \fC[virtual protected]\fR"
Internal implementation of the virtual QPaintDevice::metric() function.
.PP
Use the QPaintDeviceMetrics class instead.
.PP
Reimplemented from QPaintDevice.
.SH "int QPrinter::minPage () const"
Returns the min-page setting. The default value is 0.
.PP
See also: maxPage() and setMinMax().
.SH "bool QPrinter::newPage ()"
Advances to a new page on the printer. Returns TRUE if successful, otherwise FALSE.
.SH "int QPrinter::numCopies () const"
Returns the number of copies to be printed. The default value is 1.
.PP
See also: setNumCopies().
.SH "Orientation QPrinter::orientation () const"
Returns the orientation setting. The default value is \fCQPrinter::Portrait.\fR
.PP
See also: setOrientation().
.SH "const char * QPrinter::outputFileName () const"
Returns the name of the output file. There is no default file name.
.PP
See also: setOutputFileName() and setOutputToFile().
.SH "bool QPrinter::outputToFile () const"
Returns TRUE if the output should be written to a file, or FALSE if the output should be sent directly to the printer. The default setting is FALSE.
.PP
This function is currently only supported under X11.
.PP
See also: setOutputToFile() and setOutputFileName().
.SH "QPrinter::PageOrder QPrinter::pageOrder() const"
Returns the current page order.
.PP
The default page order is \fIFirstPageFirst.\fR
.SH "PageSize QPrinter::pageSize () const"
Returns the printer page size. The default value is \fCQPrinter::A4.\fR
.PP
See also: setPageSize().
.SH "const char * QPrinter::printProgram () const"
Returns the name of the program that sends the print output to the printer.
.PP
The default print program is "lpr" under X11. This function returns 0 for all other window systems.
.PP
See also: setPrintProgram().
.SH "const char * QPrinter::printerName () const"
Returns the printer name. This value is initially set to the name of the default printer.
.PP
See also: setPrinterName().
.SH "void QPrinter::setColorMode ( ColorMode newColorMode )"
Sets the printer's color mode to \fInewColorMode,\fR which can be one of \fCColor\fR (the default) and \fCGrayScale.\fR
.PP
A future version of Qt will modify its printing accordingly. At present, QPrinter behaves as if \fCColor\fR is selected.
.PP
See also: colorMode().
.SH "void QPrinter::setCreator ( const char * creator )"
Sets the creator name.
.PP
Calling this function only has effect for the X11 version of Qt. The creator name is the name of the application that created the document. If no creator name is specified, then the creator will be set to "Qt".
.PP
See also: creator().
.SH "void QPrinter::setDocName ( const char * name )"
Sets the document name.
.SH "void QPrinter::setFromTo ( int fromPage, int toPage )"
Sets the from page and to page.
.PP
The from-page and to-page settings specify what pages to print.
.PP
See also: fromPage(), toPage(), setMinMax() and setup().
.SH "void QPrinter::setMinMax ( int minPage, int maxPage )"
Sets the min page and max page.
.PP
The min-page and max-page restrict the from-page and to-page settings. When the printer setup dialog comes up, the user cannot select from and to that are outsize the range specified by min and max pages.
.PP
See also: minPage(), maxPage(), setFromTo() and setup().
.SH "void QPrinter::setNumCopies ( int numCopies )"
Sets the number of pages to be printed.
.PP
The printer driver reads this setting and prints the specified number of copies.
.PP
See also: numCopies() and setup().
.SH "void QPrinter::setOrientation ( Orientation orientation )"
Sets the print orientation.
.PP
The orientation can be either \fCQPrinter::Portrait\fR or \fCQPrinter::Landscape.\fR
.PP
The printer driver reads this setting and prints using the specified orientation.
.PP
See also: orientation().
.SH "void QPrinter::setOutputFileName ( const char * fileName )"
Sets the name of the output file.
.PP
Setting a null name (0 or "") disables output to a file, i.e. calls setOutputToFile(FALSE); Setting non-null name enables output to a file, i.e. calls setOutputToFile(TRUE).
.PP
This function is currently only supported under X11.
.PP
See also: outputFileName() and setOutputToFile().
.SH "void QPrinter::setOutputToFile ( bool enable )"
Specifies whether the output should be written to a file or sent directly to the printer.
.PP
Will output to a file if \fIenable\fR is TRUE, or will output directly to the printer if \fIenable\fR is FALSE.
.PP
This function is currently only supported under X11.
.PP
See also: outputToFile() and setOutputFileName().
.SH "void QPrinter::setPageOrder ( PageOrder newPageOrder )"
Sets the page order to \fInewPageOrder.\fR
.PP
The page order can be \fCQPrinter::FirstPageFirst\fR or \fCQPrinter::LastPageFirst.\fR The application programmer is responsible for reading the page order and printing accordingly.
.SH "void QPrinter::setPageSize ( PageSize newPageSize )"
Sets the printer page size to \fInewPageSize.\fR
.PP
The page size can be one of
.TP
\fCQPrinter::A0\fR (841 x 1189 mm)
.TP
\fCQPrinter::A1\fR (594 x 841 mm)
.TP
\fCQPrinter::A2\fR (420 x 594 mm)
.TP
\fCQPrinter::A3\fR (297 x 420 mm)
.TP
\fCQPrinter::A4\fR (210x297 mm, 8.26x11.7 inches)
.TP
\fCQPrinter::A5\fR (148 x 210 mm)
.TP
\fCQPrinter::A6\fR (105 x 148 mm)
.TP
\fCQPrinter::A7\fR (74 x 105 mm)
.TP
\fCQPrinter::A8\fR (52 x 74 mm)
.TP
\fCQPrinter::A9\fR (37 x 52 mm)
.TP
\fCQPrinter::B0\fR (1030 x 1456 mm)
.TP
\fCQPrinter::B1\fR (728 x 1030 mm)
.TP
\fCQPrinter::B10\fR (32 x 45 mm)
.TP
\fCQPrinter::B2\fR (515 x 728 mm)
.TP
\fCQPrinter::B3\fR (364 x 515 mm)
.TP
\fCQPrinter::B4\fR (257 x 364 mm)
.TP
\fCQPrinter::B5\fR (182x257 mm, 7.17x10.13 inches)
.TP
\fCQPrinter::B6\fR (128 x 182 mm)
.TP
\fCQPrinter::B7\fR (91 x 128 mm)
.TP
\fCQPrinter::B8\fR (64 x 91 mm)
.TP
\fCQPrinter::B9\fR (45 x 64 mm)
.TP
\fCQPrinter::C5E\fR (163 x 229 mm)
.TP
\fCQPrinter::Comm10E\fR (105 x 241 mm, US Common #10 Envelope)
.TP
\fCQPrinter::DLE\fR (110 x 220 mm)
.TP
\fCQPrinter::Executive\fR (7.5x10 inches, 191x254 mm)
.TP
\fCQPrinter::Folio\fR (210 x 330 mm)
.TP
\fCQPrinter::Ledger\fR (432 x 279 mm)
.TP
\fCQPrinter::Legal\fR (8.5x14 inches, 216x356 mm)
.TP
\fCQPrinter::Letter\fR (8.5x11 inches, 216x279 mm)
.TP
\fCQPrinter::Tabloid\fR (279 x 432 mm)
.IP
.PP
See also: pageSize().
.SH "void QPrinter::setPrintProgram ( const char * printProg )"
Sets the name of the program that should do the print job.
.PP
If an output file has been defined, the printer driver will print to the output file instead of directly to the printer.
.PP
On X11, this function sets the program to call with the PostScript output. On other platforms, it has no effect.
.PP
See also: printProgram().
.SH "void QPrinter::setPrinterName ( const char * name )"
Sets the printer name.
.PP
The default printer will be used if no printer name is set.
.PP
Under X11, the PRINTER environment variable defines the default printer. Under any other window system, the window system defines the default printer.
.PP
See also: printerName().
.SH "bool QPrinter::setup ( QWidget * parent = 0 )"
Opens a printer setup dialog and asks the user to specify what printer to use and miscellaneous printer settings.
.PP
Returns TRUE if the user pressed "Ok" to print, or FALSE if the user cancelled the operation.
.PP
Examples:
.(l
drawdemo/drawdemo.cpp
.)l
.SH "int QPrinter::toPage () const"
Returns the to-page setting. The default value is 0.
.PP
The programmer is responsible for reading this setting and print accordingly.
.PP
See also:  setFromTo() and fromPage().
.SH "SEE ALSO"
.BR http://www.troll.no/qt/qprinter.html
.SH COPYRIGHT
Copyright 1992-1997 Troll Tech AS.  See the LICENSE file included in
the distribution for a complete license statement.
.SH AUTHOR
Generated automatically from the source code.
