.TH QBitmap 3qt "26 Febrary 1999" "Troll Tech AS" \" -*- nroff -*-
.\" Copyright 1992-1997 Troll Tech AS.  All rights reserved.  See the
.\" LICENSE file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QBitmap \- Monochrome (1 bit depth) pixmaps
.SH SYNOPSIS
.br
.PP
\fC#include <qbitmap.h>\fR
.PP
Inherits QPixmap.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "QBitmap ()"
.br
.ti -1c
.BI "QBitmap ( int " "w" ", int " "h" ", bool " "clear" " = FALSE )"
.br
.ti -1c
.BI "QBitmap ( const QSize &, bool " "clear" " = FALSE )"
.br
.ti -1c
.BI "QBitmap ( int " "w" ", int " "h" ", const uchar * " "bits" ", bool " "isXbitmap" "=FALSE )"
.br
.ti -1c
.BI "QBitmap ( const QSize &, const uchar * " "bits" ", bool " "isXbitmap" "=FALSE )"
.br
.ti -1c
.BI "QBitmap ( const QBitmap & )"
.br
.ti -1c
.BI "QBitmap ( const char * " "fileName" ", const char * " "format" "=0 )"
.br
.ti -1c
.BI "QBitmap& operator= ( const QBitmap & )"
.br
.ti -1c
.BI "QBitmap& operator= ( const QPixmap & )"
.br
.ti -1c
.BI "QBitmap& operator= ( const QImage & )"
.br
.ti -1c
.BI "QBitmap xForm ( const QWMatrix & ) const"
.br
.in -1c
.SH DESCRIPTION
The QBitmap class provides monochrome (1 bit depth) pixmaps.
.PP
The QBitmap class is a monochrome off-screen paint device, used mainly for creating custom mouse cursors or brushes.
.PP
A QBitmap is a QPixmap with the depth 1. If a pixmap with a depth greater than 1 is assigned to a bitmap, the bitmap will be automatically dithered. A QBitmap is guaranteed to always have the depth 1, unless it is a null bitmap (has depth 0).
.PP
When drawing in a QBitmap (or QPixmap with depth 1), we recommend using the global \fCcolor0\fR and \fCcolor1\fR QColor objects. Painting with \fCcolor0\fR sets the bitmap bits to 0, and painting with \fCcolor1\fR sets the bits to 1. For a bitmap, 0-bits indicate background (or white) and 1-bits indicate foreground (or black). Using the \fCblack\fR and \fCwhite\fR QColor objects make no sense, because the pixel value is not necessarily 0 for black and 1 for white.
.PP
Just like the QPixmap class, QBitmap is optimized by the use of implicit sharing, so it is very efficient to pass QBitmap objects as arguments.
.PP
See also: QPixmap, QPainter::drawPixmap(), bitBlt() and Shared Classes
.PP
Examples:
.(l
cursor/cursor.cpp
.)l
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QBitmap::QBitmap ()"
Constructs a null bitmap.
.PP
See also: QPixmap::isNull().
.SH "QBitmap::QBitmap ( const QSize & size, bool clear = FALSE )"
Overloaded constructor; takes a QSize parameter instead of \fI(w,h).\fR
.SH "QBitmap::QBitmap ( const QSize & size, const uchar * bits, bool isXbitmap=FALSE )"
Overloaded constructor; takes a QSize parameter instead of \fI(w,h).\fR
.SH "QBitmap::QBitmap ( const QBitmap & bitmap )"
Constructs a bitmap which is a copy of \fIbitmap.\fR
.SH "QBitmap::QBitmap ( const char * fileName, const char * format=0 )"
Constructs a pixmap from the file \fIfileName.\fR If the file does not exist, or is of an unknown format, the pixmap becomes a null pixmap.
.PP
The parameters are passed on to QPixmap::load().
.PP
See also: QPixmap::isNull(), QPixmap::load(), QPixmap::loadFromData(), QPixmap::save() and QPixmap::imageFormat().
.SH "QBitmap::QBitmap ( int w, int h, bool clear = FALSE )"
Constructs a bitmap with \fIw\fR width and \fIh\fR height.
.PP
The contents of the bitmap is uninitialized if \fIclear\fR is FALSE, otherwise it is filled with pixel value 0 (the QColor \fCcolor0).\fR
.SH "QBitmap::QBitmap ( int w, int h, const uchar * bits, bool isXbitmap=FALSE )"
Constructs a bitmap with \fIw\fR width and \fIh\fR height and sets the contents to \fIbits.\fR
.PP
The \fIisXbitmap\fR should be TRUE if \fIbits\fR was generated by the X11 bitmap program. The X bitmap bit order is little endian. The QImage documentation discusses bit order of monochrome images.
.PP
Example (creates an arrow bitmap):
.PP
.nf
.br
    uchar arrow_bits[] = { 0x3f, 0x1f, 0x0f, 0x1f, 0x3b, 0x71, 0xe0, 0xc0 };
.br
    QBitmap bm( 8, 8, arrow_bits, TRUE );
.fi
.SH "QBitmap & QBitmap::operator= ( const QImage & image )"
Converts the image \fIimage\fR to a bitmap that is assigned to this bitmap. Returns a reference to the bitmap.
.PP
Dithering will be performed if the image has a depth greater than 1.
.SH "QBitmap & QBitmap::operator= ( const QPixmap & pixmap )"
Assigns the pixmap \fIpixmap\fR to this bitmap and returns a reference to this bitmap.
.PP
Dithering will be performed if the pixmap has a depth greater than 1.
.SH "QBitmap & QBitmap::operator= ( const QBitmap & bitmap )"
Assigns the bitmap \fIbitmap\fR to this bitmap and returns a reference to this bitmap.
.SH "QBitmap QBitmap::xForm ( const QWMatrix & matrix ) const"
Returns a copy of the bitmap that is transformed using \fImatrix.\fR
.PP
This function does exactly the same as QPixmap::xForm(), except that it returns a QBitmap instead of a QPixmap.
.PP
See also:  QPixmap::xForm().
.SH "SEE ALSO"
.BR http://www.troll.no/qt/qbitmap.html
.SH COPYRIGHT
Copyright 1992-1997 Troll Tech AS.  See the LICENSE file included in
the distribution for a complete license statement.
.SH AUTHOR
Generated automatically from the source code.
