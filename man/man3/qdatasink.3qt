.TH QDataSink 3qt "26 Febrary 1999" "Troll Tech AS" \" -*- nroff -*-
.\" Copyright 1992-1997 Troll Tech AS.  All rights reserved.  See the
.\" LICENSE file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QDataSink \- A QDataSink is an asynchronous consumer of data
.SH SYNOPSIS
.br
.PP
\fC#include <qasyncio.h>\fR
.PP
Inherits QAsyncIO.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "virtual int readyToReceive ()"
.br
.ti -1c
.BI "virtual void receive ( const uchar *, int count )"
.br
.ti -1c
.BI "virtual void eof ()"
.br
.ti -1c
.BI "void maybeReady ()"
.br
.in -1c
.SH DESCRIPTION
A QDataSink is an asynchronous consumer of data.
.PP
A data sink is an object which receives data from some source in an asynchronous manner. This means that at some time not determined by the data sink, blocks of data are given to it from processing. The data sink is able to limit the maximum size of such blocks which it is currently able to process.
.PP
See also: QAsyncIO, QDataSource and QDataPump.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "void QDataSink::eof () \fC[virtual]\fR"
This function will be called when no more data is available for processing.
.SH "void QDataSink::maybeReady ()"
This should be called whenever readyToReceive() might have become non-zero. It is merely calls QAsyncIO::ready() if readyToReceive() is non-zero.
.SH "int QDataSink::readyToReceive () \fC[virtual]\fR"
The data sink should return a value indicating how much data it is ready to consume. This may be 0.
.SH "void QDataSink::receive ( const uchar *, int count ) \fC[virtual]\fR"
This function is called to provide data for the data sink.  The count
will be no more than the amount indicated by the most recent call to
readyToReceive().  The sink must use all the provided data.
.SH "SEE ALSO"
.BR http://www.troll.no/qt/qdatasink.html
.SH COPYRIGHT
Copyright 1992-1997 Troll Tech AS.  See the LICENSE file included in
the distribution for a complete license statement.
.SH AUTHOR
Generated automatically from the source code.
