<!doctype linuxdoc system>

<!-- The ktalkd Handbook. -->

<article>

<!-- Title information -->

<title>The ktalkd Handbook
<author>David Faure <tt/David.Faure@insa-lyon.fr/
<date>Version 0.8.5, August 13, 1998
<abstract>This Handbook describes ktalkd Version 0.8.5

<!-- Table of contents -->
<toc>

<!-- Begin the document -->

<sect>Introduction
<p>

<tt/ktalkd/ is an enhanced talk daemon - the program that handles incoming talk requests,
announces them and lets you respond to it with a talk client.
GLOSSARY : In those pages, if somebody wants to talk to you, you are designated
as the "callee".

<tt/ktalkd/ has the following features :

<descrip>
<tag/KDE or not KDE/
That is the question. :) More seriously, this means that
<tt/ktalkd/ is able to be compiled with or without KDE support.
To use without KDE, the compilation stage will detect if X or Qt or KDE is not installed,
but you can force a non-KDE daemon if you use the configure option '--without-X'.

<tag/Answering machine/
If the callee isn't loggued, or doesn't answer after
the second announcement, an answering machine is launched, takes the
message, and mails it to the callee.

<tag/Sound/
If desired, a sound is played with the announcement.

<tag/X Announce/
If compiled with KDE installed, ktalkd will use
<bf/ktalkdlg/, a KDE dialog, for announcement.

<tag/Multiple displays annoucement/
If you are logged remotely (e.g. with an
<tt/"export DISPLAY=..."/ command), the X announcement will be made on
this display too. Answer on the one you want !

<tag/Forwarding   <it/(New in 0.8.0 !)//
You can set up a forward to another user even to another host
if you're away. There are 3 different forwarding methods. See section 'Usage'.

<tag/Configuration/
If KDE-compiled, it reads config from KDE config files,
the sitewide ($KDEDIR/share/config/ktalkdrc) and the user one, in its home directory.
The sitewide one has to be manually edited by the administrator, but there is now
a configuration dialog for the user one. It's called <bf/kcmktalkd/ and can 
be found in the KDE Control Center after installing <tt/ktalkd/.
On non-KDE systems, <tt/ktalkd/ will read /etc/talkd.conf.

<tag/Internationalization/
Under KDE, the announcement will be in your language provided that
you set it in the KDE menus and that someone translated <bf/ktalkdlg/ to your
language. Same for the configuration dialog, <bf/kcmktalkd/.

<tag/Support for otalk and ntalk   <it/(New in 0.8.1 !)//
ktalkd now supports both protocols. So does ktalk.
</descrip>

<p>I hope you will enjoy this talk daemon,
<p>David Faure
<p><htmlurl url="mailto:David.Faure@insa-lyon.fr" name="David.Faure@insa-lyon.fr">

<sect>Supported Platforms
<p>

<descrip>
<tag/RedHat Linux 5.0/
My development platform. Fully tested on it.

<tag/Other Linux, BSD/
Should compile and run well.

<tag/Solaris/
It won't work until somebody makes a replacement for snprintf. Of course, one should be able to install another libc to solve this...

<tag/AIX/
I've heard about problems about localtime, ctime, and assorted functions.
</descrip>

<p>I would be glad to receive comments about compiling and running <tt/ktalkd/
  on those and other systems.

<sect>Installation
<p>

<sect1>How to obtain ktalkd
<p>

<p><tt/ktalkd/ is now a core application of the KDE project 
<url url="http://www.kde.org">, part of the
<bf/kdenetwork/ package.

<p>You can download <tt/ktalkd/ from the main ftp site of the KDE project,
<url url="ftp://ftp.kde.org/pub/kde"> and from its mirrors.

<sect1>Requirements
<p>

In order to successfully compile <tt/ktalkd/, you need the latest versions 
of the KDE libraries as well as the Qt C++ library. All required 
libraries as well as ktalkd itself can be found on 
<url url="ftp://ftp.kde.org/pub/kde/">.

<sect1>Compilation and installation
<p>

  In order to compile and install <tt/ktalkd/ on your system, type the 
  following in the base directory of the <tt/ktalkd/ distribution:
<tscreen><verb>
% ./configure
% make
% make install
</verb></tscreen>

As <tt/ktalkd/ is a daemon, <tt/make install/ will require root privileges.

<p>Don't forget to update /etc/inetd.conf.
For example, on a linux system, if kde is in /opt/kde, change the lines 
concerning talk and ntalk to :
<tscreen><verb>
talk   dgram   udp     wait    root    /usr/sbin/tcpd  /opt/kde/bin/kotalkd
ntalk  dgram   udp     wait    root    /usr/sbin/tcpd  /opt/kde/bin/ktalkd
</verb></tscreen>
A script is provided, to make the necessary change automatically. 
Update your inetd.conf file just by running 
<tscreen><verb>
% ./post-install.sh
</verb></tscreen>
Anyway, you'll have to <bf/restart inetd/ after this.
On most Linux systems, do :
<tscreen><verb>
% killall -HUP inetd
</verb></tscreen>

<p>Please inform me of any modification you had to undertake in order to
get <tt/ktalkd/ to compile on your platform.

<sect>Usage
<p>

Not much to say about ktalkd : it is a daemon. No user interface for it.
<p>The announcement dialog box is trivial : respond or ignore.
<p>The configuration dialog should be rather straight forward, except for setting up a
forward to another user (or even to another host).

<sect1>Choosing a forward method
<p>
None is perfect, they all have pros (+) and cons (-).

<p><bf/FWA/ : Forward announcement only. Direct connection. Not recommended.
<itemize>
<item>       (+) You know who is the caller, but
<item>       (-) Caller will have to respond to an announcement from you. Annoying.
<item>       (-) Don't use if you have an answering machine on your 'away' location.
  (The answering machine can't popup an announcement, it would be confusing!)
</itemize>
<p><bf/FWR/ : Forward all requests, changing info when necessary. Direct connection.
<itemize>
<item>       (+) Caller won't know that you're away, but
<item>       (-) You won't really know who's the caller - only his username, 
(so you might see "talk from Wintalk@my_host")
</itemize>
<p><bf/FWT/ : Forward all requests and take the talk. No direct connection.
<itemize>
<item>       (+) Same as above, but works also if you and caller can't be in
direct contact one with the other (e.g. firewall).
<item>       (+) You'll be told who's really talking to you when you accept the talk
<item>       (-) But as in FWR, you won't know his machine name in the announcement
</itemize>
<p>In short, use <bf/FWT/ it you want to use it behind a firewall (and if ktalkd
can access both networks), and <bf/FWR/ otherwise.

<sect>Questions and answers
<p>
<sect1>Why doesn't root receive KDE announcements ?
<p>
Because this would be security hole, with the current user detection.
You can bypass the limitation by adding two lines in xdm config files
(which are the same than kdm ones).
Note : the S.u.S.E linux distribution includes those lines by default.

<p>
Those config files are situated in a directory such as /etc/X11/xdm,
or /usr/X11R6/lib/X11/xdm on other systems. The following supposes
that they are in /etc/X11/xdm, so you might have to translate them
for another directory.

<p>
Here is what you have to do :
Edit the file Xstartup, or create it, (in the xdm config directory) so that it reads :
<tscreen><verb>
#!/bin/sh
/etc/X11/xdm/GiveConsole
sessreg -a -l $DISPLAY -x /etc/X11/xdm/Xservers $USER
</verb></tscreen>

and the file Xreset so that it reads :
<tscreen><verb>
#!/bin/sh
/etc/X11/xdm/TakeConsole
sessreg -d -l $DISPLAY $USER   
</verb></tscreen>

Make sure that <bf/xdm-config/ make reference to those two
files:
<tscreen><verb>
DisplayManager._0.startup:      /etc/X11/xdm/Xstartup
DisplayManager._0.reset:        /etc/X11/xdm/Xreset 
</verb></tscreen>

<P>
This will make kdm (or xdm) log the user into utmp, which is the right 
thing to do. It's not up to kvt, nor xterm, to log the user, but to
xdm and kdm, in my opinion. However, this will not log the user as a X 
user when using startx... Any hint about that ?

<sect1>Why don't I, as a normal user, receive KDE announcements ?
<p>
If you're running a linux system (with /proc enabled), this is a
bug. Please send me a description of it so that I correct it.</p>
<p>Otherwise, this is normal : ktalkd can't find the user, as KDE doesn't 
log him into utmp and the linux based (/proc) detection is disabled.
The solution is the same as in section 5.1, provided that you run kdm
or xdm to log into X.
Another solution is to make sure you always have a xterm running.

<sect1>How to get debug output from ktalkd ?
<P>
As it is a daemon, there is no debug output on standard output. To get 
debugging output (for instance before submitting me a bug report !), update 
the lines in inetd.conf which launches ktalkd and kotalkd to be :
<tscreen><verb>
talk   dgram   udp     wait    root    /usr/sbin/tcpd  /opt/kde/bin/kotalkd -d
ntalk  dgram   udp     wait    root    /usr/sbin/tcpd  /opt/kde/bin/ktalkd -d
</verb></tscreen>
(notice the <bf/-d/ option)

<P>Then edit /etc/syslog.conf to add the following line :
<tscreen><verb>
*.*         /var/log/all_messages
</verb></tscreen>
<P>To make it work, you then have to restart inetd and syslogd :
<tscreen><verb>
% killall -HUP inetd
% killall -HUP syslogd
</verb></tscreen>
Finally, run a talk session and see the result in /var/log/all_messages

When submitting a bug report, never forget to include the debugging output, but 
also ktalkd's version number and the "./configure" output.

<sect>History
<p>
Here comes the <bf/ChangeLog/ :
<verb>
1998-08-12  David Faure  <David.Faure@insa-lyon.fr> (0.8.5)

	* ktalkd/find_user.cpp: Fixed a nasty bug with unsigned int. Thanks Rolf.
	   Also uncommented use of ut_host for PTYs (ex : xterms).
	   Also exit the loop if XDM login found. Highest priority.

	* kotalkd/includ.h: Added a simpler version of includ.h.

1998-08-10  David Faure  <David.Faure@insa-lyon.fr> (0.8.4)

	* ktalkd/machines/talkconn.cpp: Support for otalk. (not finished).

	* kotalkd/*.c: Just send to ktalkd, which responds itself.

	* ktalkd/process.cpp: Handle otalk packets (with vers=0)

1998-08-09  David Faure  <David.Faure@insa-lyon.fr>

	* kotalkd/kotalkd.c: Dies if ktalk protocol detection (-> ntalk detected).

	* ktalkd/machines/forwmach.cpp: Now forwards DELETEs too. (cf. sig_handler).

	* ktalkd/machines/forwmach.cpp: Final cleanup improved. (for forwmachines).

	* ktalkd/options.cpp: Created, to hold systemwide options.

	* ktalkd/*.c: Converted to c++ all c files.

1998-08-07  David Faure  <David.Faure@insa-lyon.fr> (0.8.3)

	* ktalkd/doc/en/Makefile.am: index.html -> ktalkd.html

1998-08-07  David Faure  <David.Faure@insa-lyon.fr> (0.8.2)

	* ../acincktalk.m4: Bug fix for the bug fix. Linux detection ok.

1998-08-02  David Faure  <David.Faure@insa-lyon.fr>

	* doc/en/ktalkd.sgml: Converted all documentation to sgml. Phew.

	* kcmktalkd/forwmachpage.cpp: i18n'ed the explanation for forwards

1998-07-31  David Faure  <David.Faure@insa-lyon.fr>

	* ../acincktalk.m4: More output printed out and a bug fix  
	
1998-07-30  David Faure  <David.Faure@insa-lyon.fr> (0.8.1)

	* kotalkd/*.c: New way to support otalk protocol : forward everything
	to local ntalk daemon (possibly ktalkd, but any other should work too)

	* ktalkd/machines/talkconn.cpp (listen): Use SOMAXCONN as arg to listen

1998-07-27  David Faure  <David.Faure@insa-lyon.fr> (0.8.0)

	* kotalkd/: Created to support otalk protocol. No new source
	files. Everything is links in it, except Makefile.am and all
	generated files.

1998-07-26  David Faure  <David.Faure@insa-lyon.fr>

	* ktalkd/threads.c: Created to manage children processes (register, wait, ...)
	No more zombie processes waiting 1mn30s to be acknowledged. :)

	* ktalkd/machines/forwmach.*: FWT. Lots of bug fixed. Fully tested now.

	* ktalkd/machines/talkconn.*: Bug fixing.

1998-07-24  David Faure  <David.Faure@insa-lyon.fr>
	
	* ktalkd/machines/forwmach.*: Created the Forwarding machine. FWA. FWR.

	* kcmktalkd/*: Added the 'forward' configuration page.

	* ktalkd/*: Reverted most of the patch from Enrico Scholz.
	  The forwarding machine is now used for NEU if NEUBehaviour=1.

1998-07-18  David Faure  <David.Faure@insa-lyon.fr>

	* ktalkd/readcfg++.h: Removed. Now in readconf.h

1998-07-15  David Faure  <David.Faure@insa-lyon.fr> (0.7.0)

	* ktalkd/machines/talkconn.cpp (set_edit_chars): At last ! Fixed the 
	   bug in answmach banners, which first appeared 8 months ago, 
	   erasing half of some lines !

	* ktalkd/table.c, ktalkd/print.c: Improved logs.

	* ktalkd/process.c: Bug fixed : insert_table called even for NEU.

	* ktalkd/machines/*: Converted the answering machine to C++.
 	                     Split into 3 classes.
	     TalkConnection : Handles the protocol.
	     TalkMachine : Generic talk machine.
	     AnswMachine : Answering machine. Inherits from TalkMachine.

1998-07-08  David Faure  <David.Faure@insa-lyon.fr> (0.6.2)

	* ktalkd/*, ktalkdlg.cpp: Applied patch for NEUBehaviour=1 
	by Enrico Scholz <enrico.scholz@wirtschaft.tu-chemnitz.de> 

	* answmach/init_disp.c: Handle VWERASE if not defined (for AIX)
	
1998-07-06  David Faure  <David.Faure@insa-lyon.fr>

	* ktalkd/announce.c: Small bug fix in text announcement (remotename).

1998-06-15  David Faure  <David.Faure@insa-lyon.fr>
	
	* ktalkd/find_user.c: Added blank after display, needed by announce.c
	
	* kcmktalkd/answmachpage.cpp: Override help() to display ktalkd's help.

1998-06-13  David Faure  <David.Faure@insa-lyon.fr> (0.6.1)

	* includ.h, talkd.h: took talkd.h from ktalk. ktalkd doesn't use the
	                        system one anymore.

	* answmach/look_up.c: use sockaddr instead of osockaddr

	* acincktalk.m4, configure.in.1: removed the check for osockaddr

	* ktalkd/talkd.c: Use sys/params.h where available, for hostname length

1998-06-11  David Faure  <David.Faure@insa-lyon.fr> (0.6.0)

	* ktalkd/: Reorganised the directory structure, to ship ktalkd 
	with ktalkdlg and kcmktalkd in a single package.
	
	* talkd.c: Caller's hostname was limited to 32 ! Now 256.

	* Makefile.am: rewrote some of them, for non-KDE users.

1998-06-09  David Faure  <David.Faure@insa-lyon.fr> (0.5.7)

	* kcmktalkd: First release of the configuration dialog
	
1998-05-16  David Faure  <David.Faure@insa-lyon.fr> (0.5.6)

	* announce.c: Announces with ktalkdlg on ALL displays where the
           user is found. It works ! 

	* readcfg++.cpp (init_user_config):
	   Added setenv("HOME",...) because the kdelibs rely on that to find 
	   the user config file.

1998-05-15  David Faure  <David.Faure@insa-lyon.fr> (0.5.5)

	* doc/: Made HTML documentation. Phew. Done.

	* readcfg++.cpp (init_user_config):
	   Removed the un-necessary looking in pwd file. 
           KDElibs do that for us :)

	* find_user.c:
	   Disabled X processes scanning if uid < 10. (Security hole)
	   Corrected a bug (S_ISCHR() is now "& 020") which didn't let you talk
	   to tty2 if tty1 was "mesg n".

	* announce.c: open user config file before calling announce_proc, so 
	   that it *is* closed now. It wasn't because of 'return'.
	

1998-05-06  David Faure  <David.Faure@insa-lyon.fr>

	* announce.c: now the non-KDE sound works with and without option.
	* acinclude.m4.in - the ktalkd one : some more corrections for 
                                             working without X.

1998-04-28  David Faure  <David.Faure@insa-lyon.fr> (0.5.4)

	* acinclude.m4.in - the one from ktalkd package, not the kdenonbeta one
	   rewrote X detection, so that it works also without X :)

1998-04-20  David Faure  <David.Faure@insa-lyon.fr> (0.5.3)
	
	* Makefile.am: Removed -lkdeui, not needed.
	* io.c: Corrected an awful bug 
                      (NEUBanner displayed instead of OPTinvitelines)
	* readcfg++.cpp: Added missing "/" before 'ktalkdrc'

1998-04-19  David Faure  <David.Faure@insa-lyon.fr> (0.5.2)

	* readcfg++.cpp: added check for user config file.
 	        (was created with root permission otherwise)
	* acinclude.m4.in - the ktalkd one: updated

1998-04-15  David Faure  <David.Faure@insa-lyon.fr> (0.5.1)

	ktalkd doesn't use anymore kdedir() because it's protected.
	It sets now $KDEBINDIR, for portable ktalkdrc files. KDEBINDIR 
	is determined by a call to the kde_bindir() function.
	Makefile doesn't define TALKD_CONF anymore for compilation :
	ktalkd now opens ktalkdrc from KApplication::kde_configdir().

1998-03-26  David Faure  <David.Faure@insa-lyon.fr> (0.5.0)
	ktalkdrc: Extprg is now $KDEDIR/bin/ktalkdlg.
	KDEDIR is now set when reading global configuration file.
	Default value for Extprg includes $KDEDIR.

1998-03-25  David Faure  <David.Faure@insa-lyon.fr> (0.4.8)
	KDEDIR is now set by ktalkd, not by ktalkdlg.
	ktalkdrc*:removed path in front of sound files. ktalkdlg now finds them
	 in kde_sounddir().
	Added option ExtPrg. Set to ktalkdlg (default) or ktalk.

1998-03-14  David Faure  <David.Faure@insa-lyon.fr> (0.4.7)
	Made 2 packages out of ktalkd : ktalkd and ktalkdlg (new name for
	 atdlg), so that Burkhard Lehner <b_lehner@informatik.uni-kl.de>
	can improve it to communicate with ktalk.

1998-03-13  David Faure  <David.Faure@insa-lyon.fr> (0.4.6)
	Changed S_MESSG size. (Too little for mail first line, if NEU)
	Used mkstemp instead of popen for the message left to the
	answering machine. Added option EmptyMail, to avoid getting
	empty mails.

1998-03-10  David Faure  <David.Faure@insa-lyon.fr> (0.4.5)
	Renamed debug to debug_mode (debug exists in qt)
	Updated configure.in and acinclude.m4 to match CVS ones.
	Same for ltconfig, ltmain.sh, ...
	Added new translations (es, it) and changed po structure.
	Added NEUBanner* options to ktalkdrc.

1998-02-27  D.F. (thanks to Juraj Bednar <bednar@isternet.sk>) (0.4.4)
        Removed ktalkd-0.4.x/protocols from the distribution. Caused a 
        bug when compiling.

1998-02-15  D.F. (thanks to B. Lehner<b_lehner@informatik.uni-kl.de>) (0.4.3)
	added checks for paths.h and protocols/talkd.h (for Solaris)
	Added default paths (/dev/ and /var/run/utmp) if paths.h not found
	Included talkd.h in the distribution, for Solaris which doesn't have it
        Changed AC_CHECK_OSOCKADDR to use this file if protocols/talkd.h absent

1998-02-04  David Faure  <David.Faure@insa-lyon.fr> (0.4.2)
	Added user option Answmach.
	Moved the daemon to $KDEDIR/bin. One must now change inetd.conf 
	(this way, rpms won't conflict with standard ones, and the old
	in.ntalkd will remain available). Should I deviate 'talk' protocol
	too (in addition to 'ntalk') ?
	Made installation NOT overwrite actual sitewide config file.
	Merged and updated READMEs.

1998-02-03  David Faure  <David.Faure@insa-lyon.fr> (0.4.1)
	Added -rpath option, as it's necessary for ktalkd if $KDEDIR/lib is
	not set in ld.so.conf (LD_LIBRARY_PATH not read by a daemon)

1998-02-03 David Faure  <David.Faure@insa-lyon.fr> (0.4.0)
	Corrected bugs related to new acinclude.m4 : compiling without X
	and without KDE is possible again.
	Added memcpy for structs.
	Made atdlg re-write ktalkdrc for user if necessary.
	
1998-01-29  David Faure  <David.Faure@insa-lyon.fr> (0.3.4)
	Removed answinfo var., added return val to announce and process_request.
	Non existent user (NEU) support : either launch answmach or do nothing.
	(set it in systemwide ktalkdrc). Don't sleep() before answering if NEU
	or not logged.

1998-01-26  David Faure  <David.Faure@insa-lyon.fr> (0.3.3)
	Deutsch translation added by J. Mertin <smurphy@stardust.phantasia.org>
	Enabled atdlg without sound, following option set.
	Removed nasty \r\n, not needed.
	Made banner arrive 16 chars at a time, not the whole at once !

1998-01-25  David Faure  <David.Faure@insa-lyon.fr> (0.3.2)
	Changed default configuration : ktalkd.wav will be installed
	in $KDEDIR/share/apps/ktalkd.  ktalkdrc points to it.
	Made package install_root capable (e.g. for building rpms).

1998-01-25  David Faure  <David.Faure@insa-lyon.fr> (0.3.1)
	atdlg will now play sound itself, using libmediatool.
	Typos and bugs corrected.

1998-01-24  still me ... :) (0.3.0)
        Added internationalization to atdlg.cpp. Had to change atdlg params.
        User must set language in ktalkdrc.
	Added more user options to ktalkdrc_user: Sound, SoundPlayer, SoundFile.
	Updated configure.in and acinclude.m4 to stick to kdenetwork as much
	as possible.
        
1998-01-14  David Faure <David.Faure@insa-lyon.fr> (0.2.5)
	Moved -DHAVE_KDE from config.h (was a bad hack) to Makefile.am
	Added AC_CHECK_GETDOMAINNAME and AC_CHECK_GETHOSTNAME...
	 and some other little changes to get closer to autoconf stuff from
	 kdenetwork, for future integration. Worked on BSD portability.

1998-01-12  David Faure  <David.Faure@insa-lyon.fr> (0.2.4)
	Changed acinclude.m4, to remove NULL, and to make check for osockaddr
	work better under bsd... Also removed NULL from anywhere in the code.

1998-01-11  David Faure  <David.Faure@insa-lyon.fr> (0.2.3)
	Added a macro in acinclude.m4, to check for sockaddr and osockaddr.

1998-01-11  David Faure  <David.Faure@insa-lyon.fr> (0.2.2)
	Wrote a new way of finding users, in addition to reading utmp,
	which reads /proc to find $DISPLAY of processes. (Linux only).

1998-01-08  David Faure  <David.Faure@insa-lyon.fr> (0.2.1)
	Removed MSG_EOR as it used in BSD with another meaning.

1997-12-19  David Faure  <David.Faure@insa-lyon.fr> (0.2.0)
	Merged patch from Ralph Weichert (check for libbsd, needed under libc5)

1997-12-16  David Faure  <David.Faure@insa-lyon.fr> (0.1.9)
	Fixed link command (back to $(LINK), not $(CXXLINK).
	Fixed process.c (config.h not included => NEW_FIND_USER not defined)
	Wrote includ.h to resolve struct definitions problems.
	Started user config file processing (~/.kde/share/config/ktalkdrc)

1997-12-13  David Faure  <David.Faure@insa-lyon.fr> (0.1.8)
	Improved configure.in, acinclude.m4, and ktalkd/Makefile.am, to
	* find out where to install the daemon
	* compile even without X, Qt, and KDE
	* remove jpeg/gif dependencies

1997-12-12  David Faure  <David.Faure@insa-lyon.fr> (0.1.7)
	Small bugs correction. 	

1997-12-08  David Faure and Ralph Weichert (0.1.6)
	Added autoconf and automake support. Added support for glibc.
	Back to c compiling, except for .cpp files, of course.

1997-12-02  David Faure <David.Faure@insa-lyon.fr> (0.1.5)
	Read KDE configuration file, $KDEDIR/share/config/ktalkdrc, both by
	atdlg and ktalkd, in readcfg++.cpp. Made all daemon compile with g++.
	(Is this right ?)

1997-11-23  David Faure <David.Faure@insa-lyon.fr> (0.1.4)
	Re-wrote announcement by answering machine. One line at a time, not
	one char at a time.

1997-11-22  David Faure <David.Faure@insa-lyon.fr> (0.1.3)
	Re-wrote process_etc_file, to read talkd.conf sequentially.

1997-11-21  David Faure <David.Faure@insa-lyon.fr> (0.1.2c)
	Merged patch from <Ralph.Weichert@physik.th-darmstadt.de> :
         Used KDE libs in atdlg. User configurable talk client.
	Merged patch from Bruce Gingery <bruce@gtcs.com> :
	 User configurable To: E-Mail address
	
1997-10-25  David Faure <David.Faure@insa-lyon.fr> (0.1.2b)
	Made atdlg finish after RING_WAIT seconds, so that the re-announce
	  will display another window (=> compatibility with other clients than
	  ktalk)

1997-10-22  David Faure <David.Faure@insa-lyon.fr> (0.1.2)
	Added to ktalkd (see README for description):
	 * sound capability
	 * configuration (/etc/talkd.conf)
	 * answering machine 

1997-05-14  R. (0.1.1)
        Improved (I hope) X11 recognition:
                Local XDM logins (depends on sessreg)
                Read $DISPLAY variable for PTY logins
        atdlg is run as user and can use MIT-magic-cookies
        atdlg will run talk program
</verb>

<sect>Copyright

<p>ktalkd is maintained and improved by David Faure, David.Faure@insa-lyon.fr
<p>The original program was written by Robert Cimrman, cimrman3@students.zcu.cz

<tscreen><verb>
ktalkd is Copyright 1997,1998 David Faure David.Faure@insa-lyon.fr

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

</verb></tscreen>
<p>

</article>
